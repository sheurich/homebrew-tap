# .github/workflows/auto-merge-tap-pr.yml
name: Test and Auto-Merge Tap PRs

on:
  # Trigger on pull requests targeting the main branch (adjust if needed)
  pull_request:
    branches:
      - main # Or your default branch
    # Only trigger for PRs opened or updated (new commits pushed)
    types:
      - opened
      - synchronize
    # Only trigger if files in the Formula directory changed
    paths:
      - "Formula/**"

# Grant permissions for checkout, merging PRs, and writing contents (for merge commit)
permissions:
  contents: write
  pull-requests: write

jobs:
  test-formulae:
    name: Test Formulae in PR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR code
        # Checks out the code from the PR branch automatically
        uses: actions/checkout@v4

      - name: Set up Homebrew
        # Ensures Homebrew environment is set up correctly
        uses: Homebrew/actions/setup-homebrew@master

      - name: Run brew test for formulae in tap
        run: |
          # Ensure jq is available for parsing JSON output from tap-info
          if ! command -v jq &> /dev/null; then
            echo "jq not found, installing using Homebrew..."
            brew install jq
          fi

          # Define tap name based on the repository name (adjust if tap name differs)
          TAP_NAME="${{ github.repository }}"
          echo "Getting formulae list for tap: $TAP_NAME..."

          # Get list of only formulae within the specific tap using tap-info and jq
          # Extracts the simple formula names from the 'formula_names' array in the JSON output
          FORMULA_NAMES_ONLY=$(brew tap-info --json=v1 "$TAP_NAME" | jq -r '.formula_names[]')

          if [ -z "$FORMULA_NAMES_ONLY" ]; then
            echo "No formulae found in tap $TAP_NAME to test."
            # Consider exiting 0 if an empty tap is valid, or 1 if it indicates an error
            exit 0 # Assuming an empty tap might be okay initially
          else
            echo "Testing formulae found in $TAP_NAME..."
            # Loop through each simple formula name and test it using its full name (tap/formula)
            # Use 'echo "$FORMULA_NAMES_ONLY" | while read ...' for safety with spaces/newlines in names
            FAILED_TESTS=0
            echo "$FORMULA_NAMES_ONLY" | while IFS= read -r FORMULA_NAME; do
              # Construct full formula name (e.g., sheurich/tap/boulder) for testing
              FULL_FORMULA_NAME="$TAP_NAME/$FORMULA_NAME"
              echo "--- Testing $FULL_FORMULA_NAME ---"
              # Test using the full name
              if ! brew test "$FULL_FORMULA_NAME"; then
                 echo "!!! Test failed for $FULL_FORMULA_NAME"
                 FAILED_TESTS=$((FAILED_TESTS + 1))
              fi
            done <&0 # Ensure loop reads from the pipe

            # Check if any tests failed
            if [ "$FAILED_TESTS" -gt 0 ]; then
               echo "!!! $FAILED_TESTS formula test(s) failed."
               exit 1 # Fail the job
            else
               echo "+++ All tests passed for formulae in $TAP_NAME."
            fi
          fi

  auto-merge:
    name: Auto Merge PR
    # Run only if the test job succeeded
    needs: test-formulae
    runs-on: ubuntu-latest
    # Optional: Add condition to only merge PRs from a specific author (e.g., the bot/user creating them)
    # if: github.event.pull_request.user.login == 'expected-github-username' # Example condition
    steps:
      - name: Merge PR
        env:
          # GITHUB_TOKEN is automatically available
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Get PR number from the event payload
          PR_NUMBER: ${{ github.event.pull_request.number }}
          # Get repository name (e.g., sheurich/homebrew-tap)
          REPO: ${{ github.repository }}
        run: |
          echo "Attempting to merge PR #$PR_NUMBER in $REPO"
          # Use GitHub CLI to merge the pull request
          # Choose merge strategy: --merge, --squash, or --rebase
          gh pr merge "$PR_NUMBER" --squash --delete-branch --body "Automatically merged after tests passed."
          echo "PR #$PR_NUMBER merged successfully."
